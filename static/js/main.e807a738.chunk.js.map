{"version":3,"sources":["components/navigation/Navigation.js","components/FaceRecognition/FaceRecognition.js","components/Logo/brain.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/Signin/Signin.js","components/Register/Register.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","FaceRecognition","imageUrl","box","id","alt","src","width","height","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Logo","href","title","options","max","brain","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","name","entries","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","React","Component","Register","onNameChange","particlesOptions","particles","number","density","enable","value_area","line_linked","enable_auto","interactivity","detect_on","events","onhover","mode","initialState","input","route","isSIgnedIn","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","console","log","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","err","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"6MAmBeA,EAjBI,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cACd,OAD8C,EAAjBC,WAGrB,qBAAKC,MAAO,CAACC,QAAS,OAAQC,eAAgB,YAA9C,SACI,mBAAGC,QAAS,kBAAML,EAAc,YAAYM,UAAU,0CAAtD,wBAKJ,sBAAKJ,MAAO,CAACC,QAAS,OAAQC,eAAgB,YAA9C,UACI,mBAAGC,QAAS,kBAAML,EAAc,WAAWM,UAAU,0CAArD,qBACA,mBAAGD,QAAS,kBAAML,EAAc,aAAaM,UAAU,0CAAvD,0BCCLC,G,MAXS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,IACjC,OACI,qBAAKH,UAAU,YAAf,SACI,sBAAKA,UAAU,eAAf,UACI,qBAAKI,GAAG,aAAaC,IAAI,IAAIC,IAAKJ,EAAUK,MAAM,QAAQC,OAAO,SACjE,qBAAKR,UAAU,eAAeJ,MAAO,CAACa,IAAKN,EAAIO,OAAQC,MAAOR,EAAIS,SAAUC,OAAQV,EAAIW,UAAWC,KAAMZ,EAAIa,kB,iBCR9G,MAA0B,kCCoB1BC,G,MAfF,WACT,OACI,sBAAKjB,UAAU,UAAf,UACI,sBAAKA,UAAU,8BAAf,2BAA2D,mBAAGkB,KAAK,0BAA0BC,MAAM,UAAxC,qBAA3D,SAA8H,mBAAGD,KAAK,4BAA4BC,MAAM,WAA1C,iCAC9H,cAAC,IAAD,CAAMnB,UAAU,oBAAoBoB,QAAS,CAAEC,IAAM,IAAMzB,MAAO,CAAEY,OAAQ,IAAKD,MAAO,KAAxF,SACI,qBAAKP,UAAU,iBAAf,SACI,qBAAKK,IAAI,OAAOC,IAAKgB,aCW1BC,G,MAnBO,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,eACpC,OACI,gCACI,mBAAGzB,UAAU,KAAb,SACK,wEAEL,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,+BAAf,UACI,uBAAOA,UAAU,qBAAqB0B,KAAK,OAAOC,SAAUH,IAC5D,wBACIxB,UAAU,sDACVD,QAAS0B,EAFb,8BCGLG,EAbF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAClB,OACI,gCACI,qBAAK9B,UAAU,WAAf,mBACQ6B,EADR,sCAGA,qBAAK7B,UAAU,WAAf,SACK8B,QC4EFC,E,kDAlFX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAOVC,cAAgB,SAACC,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAT1B,EAYnBC,iBAAmB,SAACL,GAChB,EAAKC,SAAS,CAACK,eAAgBN,EAAMG,OAAOC,SAb7B,EAgBnBG,eAAiB,WAEbC,MAAM,kDAAmD,CACrDC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACjBC,MAAO,EAAKC,MAAMb,YAClBc,SAAU,EAAKD,MAAMT,mBAGxBW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACtBF,MAAK,SAAAG,GACFA,EAAKlD,KACL,EAAK4B,MAAMuB,SAASD,GACpB,EAAKtB,MAAMtC,cAAc,aA5BrC,EAAKuD,MAAQ,CACTb,YAAa,GACbI,eAAgB,IAJL,E,0CAmCnB,WAAU,IACE9C,EAAkB8D,KAAKxB,MAAvBtC,cACR,OACI,yBAASM,UAAU,iEAAnB,SACI,sBAAMA,UAAU,eAAhB,SACI,sBAAKA,UAAU,UAAf,UACI,2BAAUI,GAAG,UAAUJ,UAAU,4BAAjC,UACA,wBAAQA,UAAU,wBAAlB,qBACA,sBAAKA,UAAU,MAAf,UACI,uBAAOA,UAAU,oBAAoByD,QAAQ,gBAA7C,mBACA,uBACAzD,UAAU,qEACV0B,KAAK,QACLG,KAAK,gBACLzB,GAAG,gBACHuB,SAAU6B,KAAKvB,mBAGnB,sBAAKjC,UAAU,MAAf,UACI,uBAAOA,UAAU,oBAAoByD,QAAQ,WAA7C,sBACA,uBACAzD,UAAU,uEACV0B,KAAK,WACLG,KAAK,WACLzB,GAAG,WACHuB,SAAU6B,KAAKjB,yBAInB,qBAAKvC,UAAU,GAAf,SACA,uBAEID,QAASyD,KAAKf,eACdzC,UAAU,uEACV0B,KAAK,SACLY,MAAM,cAEV,qBAAKtC,UAAU,cAAf,SACA,mBAAGD,QAAS,kBAAML,EAAc,aAAawB,KAAK,KAAKlB,UAAU,+BAAjE,mC,GA1EH0D,IAAMC,WC6FZC,E,kDA5FX,WAAY5B,GAAQ,IAAD,8BACf,cAAMA,IAQV6B,aAAe,SAAC3B,GACZ,EAAKC,SAAS,CAACN,KAAMK,EAAMG,OAAOC,SAVnB,EAanBL,cAAgB,SAACC,GACb,EAAKC,SAAS,CAACa,MAAOd,EAAMG,OAAOC,SAdpB,EAiBnBC,iBAAmB,SAACL,GAChB,EAAKC,SAAS,CAACe,SAAUhB,EAAMG,OAAOC,SAlBvB,EAqBnBG,eAAiB,WAEbC,MAAM,oDAAqD,CACvDC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACjBC,MAAO,EAAKC,MAAMD,MAClBE,SAAU,EAAKD,MAAMC,SACrBrB,KAAM,EAAKoB,MAAMpB,SAGpBsB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACEA,EAAKlD,KACL,EAAK4B,MAAMuB,SAASD,GACpB,EAAKtB,MAAMtC,cAAc,aAlCrC,EAAKuD,MAAQ,CACTD,MAAO,GACPE,SAAU,GACVrB,KAAM,IALK,E,0CAyCnB,WACI,OACI,yBAAS7B,UAAU,iEAAnB,SACI,sBAAMA,UAAU,eAAhB,SACI,sBAAKA,UAAU,UAAf,UACI,2BAAUI,GAAG,UAAUJ,UAAU,4BAAjC,UACA,wBAAQA,UAAU,wBAAlB,sBACA,sBAAKA,UAAU,MAAf,UACI,uBAAOA,UAAU,oBAAoByD,QAAQ,OAA7C,kBACA,uBAAOzD,UAAU,qEACjB0B,KAAK,OACLG,KAAK,OACLzB,GAAG,OACHuB,SAAU6B,KAAKK,kBAGnB,sBAAK7D,UAAU,MAAf,UACI,uBAAOA,UAAU,oBAAoByD,QAAQ,gBAA7C,mBACA,uBAAOzD,UAAU,qEACjB0B,KAAK,QACLG,KAAK,gBACLzB,GAAG,gBACHuB,SAAU6B,KAAKvB,mBAGnB,sBAAKjC,UAAU,MAAf,UACI,uBAAOA,UAAU,oBAAoByD,QAAQ,WAA7C,sBACA,uBAAOzD,UAAU,uEACjB0B,KAAK,WACLG,KAAK,WACLzB,GAAG,WACHuB,SAAU6B,KAAKjB,yBAInB,qBAAKvC,UAAU,GAAf,SACA,uBACID,QAASyD,KAAKf,eACdzC,UAAU,uEACV0B,KAAK,SACLY,MAAM,0B,GAlFXoB,IAAMC,W,iBCUvBG,EAAmB,CACvBC,UAAW,CACTC,OAAQ,CACN1B,MAAM,GACN2B,QAAS,CACPC,QAAQ,EACRC,WAAY,MAGhBC,YAAa,CACXC,aAAc,IAGlBC,cAAe,CACbC,UAAW,SACXC,OAAQ,CACNC,QAAS,CACPP,QAAQ,EACRQ,KAAM,cAMRC,EAAe,CACnBC,MAAO,GACH1E,SAAU,GACVC,IAAK,GACL0E,MAAO,SACPC,YAAY,EACZxB,KAAM,CACJlD,GAAI,GACJyB,KAAM,GACNmB,MAAO,GACPlB,QAAS,EACTiD,OAAQ,KAkHDC,E,kDA5Gb,aAAe,IAAD,8BACZ,gBAIFzB,SAAW,SAAC0B,GACV,EAAK9C,SAAS,CAACmB,KAAM,CACnBlD,GAAI6E,EAAK7E,GACTyB,KAAMoD,EAAKpD,KACXmB,MAAOiC,EAAKjC,MACZlB,QAASmD,EAAKnD,QACdiD,OAAQE,EAAKF,WAXH,EAedG,sBAAwB,SAACD,GACvB,IAAME,EAAeF,EAAKG,QAAQ,GAAGH,KAAKI,QAAQ,GAAGC,YAAYC,aAC3DC,EAAQC,SAASC,eAAe,cAChCnF,EAAQoF,OAAOH,EAAMjF,OACrBC,EAASmF,OAAOH,EAAMhF,QAE5B,OADAoF,QAAQC,IAAItF,EAAOC,GACZ,CACLQ,QAASmE,EAAaW,SAAWvF,EACjCG,OAAQyE,EAAaY,QAAUvF,EAC/BI,SAAUL,EAAS4E,EAAaa,UAAYzF,EAC5CO,UAAWN,EAAU2E,EAAac,WAAazF,IAzBrC,EA6Bd0F,eAAiB,SAAC/F,GAChB,EAAKgC,SAAS,CAAChC,IAAKA,KA9BR,EAiCdqB,cAAgB,SAACU,GACf,EAAKC,SAAS,CAACyC,MAAO1C,EAAMG,OAAOC,SAlCvB,EAqCdb,eAAiB,WACf,EAAKU,SAAS,CAACjC,SAAU,EAAK+C,MAAM2B,QAClClC,MAAM,oDAAqD,CACzDC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACnB6B,MAAO,EAAK3B,MAAM2B,UAGrBzB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACAA,GACFV,MAAM,iDAAkD,CACtDC,OAAQ,MACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACnB3C,GAAI,EAAK6C,MAAMK,KAAKlD,OAGrB+C,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAgD,GACJ,EAAKhE,SAASiE,OAAOC,OAAO,EAAKpD,MAAMK,KAAM,CAAExB,QAASqE,QAEzDG,MAAMV,QAAQC,KAEnB,EAAKK,eAAe,EAAKhB,sBAAsB9B,OAGhDkD,OAAM,SAACC,GACNX,QAAQC,IAAIU,OAlEJ,EAsEd7G,cAAgB,SAACmF,GACD,YAAVA,EACF,EAAK1C,SAASwC,GACK,SAAVE,GACT,EAAK1C,SAAS,CAACxC,YAAY,IAE7B,EAAKwC,SAAS,CAAC0C,MAAOA,KA1EtB,EAAK5B,MAAQ0B,EAFD,E,0CA+Ed,WAAU,IAAD,EACsCnB,KAAKP,MAA1CtD,EADD,EACCA,WAAYO,EADb,EACaA,SAAU2E,EADvB,EACuBA,MAAO1E,EAD9B,EAC8BA,IACrC,OACE,sBAAKH,UAAU,MAAf,UACA,cAAC,IAAD,CAAWA,UAAU,YACnBwG,OAAQ1C,IACR,cAAC,EAAD,CAAYnE,WAAYA,EAAWD,cAAe8D,KAAK9D,gBAC3C,SAAVmF,EACE,qCACF,cAAC,EAAD,IACA,cAAC,EAAD,CAAMhD,KAAM2B,KAAKP,MAAMK,KAAKzB,KAAMC,QAAS0B,KAAKP,MAAMK,KAAKxB,UAC3D,cAAC,EAAD,CACEN,cAAegC,KAAKhC,cACpBC,eAAgB+B,KAAK/B,iBACvB,cAAC,EAAD,CAAiBtB,IAAKA,EAAKD,SAAUA,OAGzB,WAAV2E,EACE,cAAC,EAAD,CAAQtB,SAAUC,KAAKD,SAAU7D,cAAe8D,KAAK9D,gBACrD,cAAC,EAAD,CAAU6D,SAAUC,KAAKD,SAAU7D,cAAe8D,KAAK9D,uB,GAnGnDiE,aCxCH8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBxD,MAAK,YAAkD,IAA/CyD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1B,SAASC,eAAe,SAM1Be,K","file":"static/js/main.e807a738.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n        if(isSignedIn) {\r\n            return (\r\n                <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                    <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n                </nav>\r\n            );\r\n        } else {\r\n            return (\r\n                <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                    <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n                    <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n                </nav>\r\n            );\r\n        }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n    return (\r\n        <div className='center ma'>\r\n            <div className='absolute mt2'>\r\n                <img id='inputimage' alt=' ' src={imageUrl} width='500px' height='auto' />\r\n                <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","export default __webpack_public_path__ + \"static/media/brain.9a5815a0.png\";","import React from 'react';\r\nimport Tilt from 'react-tilt'\r\nimport brain from './brain.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <div className='iconCredit mt0 br2 shadow-2'>Icons made by <a href=\"http://www.freepik.com/\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n                <div className=\"Tilt-inner pa3\">\r\n                    <img alt='logo' src={brain}></img>\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n}\r\n\r\n//<div>Icons made by <a href=\"http://www.freepik.com/\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n    return (\r\n        <div>\r\n            <p className='f3'>\r\n                {'This Magic Brain will detect faces in your pictures. Give it a try!'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='form center pa4 br3 shadow-5'>\r\n                    <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\r\n                    <button \r\n                        className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n                        onClick={onButtonSubmit}\r\n                        >Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = ({ name, entries }) => {\r\n    return (\r\n        <div>\r\n            <div className='white f3'>\r\n                {`${name}, your current entry count is...`}\r\n            </div>\r\n            <div className='white f1'>\r\n                {entries}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\n\r\nclass Signin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: '',\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        //console.log(this.state);\r\n        fetch('https://pacific-peak-08323.herokuapp.com/signin', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n                .then(user => {\r\n                if (user.id) {\r\n                    this.props.loadUser(user);\r\n                    this.props.onRouteChange('home');\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return (\r\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 mh0 center\">Sign In</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input \r\n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"email\" \r\n                            name=\"email-address\"  \r\n                            id=\"email-address\"\r\n                            onChange={this.onEmailChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input \r\n                            className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"password\" \r\n                            name=\"password\"  \r\n                            id=\"password\"\r\n                            onChange={this.onPasswordChange}\r\n                            />\r\n                        </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                        <input \r\n                            // onClick={() => onRouteChange('home')}\r\n                            onClick={this.onSubmitSignIn}\r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                            type=\"submit\" \r\n                            value=\"Sign in\"/>\r\n                        </div>\r\n                        <div className=\"lh-copy mt3\">\r\n                        <p onClick={() => onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db pointer\">Register</p>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Signin;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: '',\r\n        }\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n        this.setState({name: event.target.value})\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({email: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({password: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        //console.log(this.state);\r\n        fetch('https://pacific-peak-08323.herokuapp.com/register', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                name: this.state.name\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if (user.id) {\r\n                    this.props.loadUser(user)\r\n                    this.props.onRouteChange('home');\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 mh0 center\">Register</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"Name\">Name</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"text\" \r\n                            name=\"name\"  \r\n                            id=\"name\"\r\n                            onChange={this.onNameChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"email\" \r\n                            name=\"email-address\"  \r\n                            id=\"email-address\"\r\n                            onChange={this.onEmailChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"password\" \r\n                            name=\"password\"  \r\n                            id=\"password\"\r\n                            onChange={this.onPasswordChange}\r\n                            />\r\n                        </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                        <input \r\n                            onClick={this.onSubmitSignIn}\r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                            type=\"submit\" \r\n                            value=\"Register\"/>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n    \r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Register;","import './App.css';\nimport Navigation from './components/navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nimport { Component } from 'react';\n// import Clarifai from 'clarifai';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value:70,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    },\n    line_linked: {\n      enable_auto : true\n    }\n  },\n  interactivity: {\n    detect_on: \"window\",\n    events: {\n      onhover: {\n        enable: true,\n        mode: \"repulse\"\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSIgnedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n}\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box})\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n      fetch('https://pacific-peak-08323.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://pacific-peak-08323.herokuapp.com/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count =>{\n              this.setState(Object.assign(this.state.user, { entries: count }))\n            })\n            .catch(console.log);\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      // .catch(err =>console.log(err));\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n      <Particles className='particles'\n        params={particlesOptions}/>\n        <Navigation isSignedIn={isSignedIn}onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ? <>\n          <Logo />\n          <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n          <ImageLinkForm \n            onInputChange={this.onInputChange} \n            onButtonSubmit={this.onButtonSubmit}/>\n          <FaceRecognition box={box} imageUrl={imageUrl}/>\n          </>\n          : (\n            route === 'signin' \n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> \n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n          \n        }\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}